{"version":3,"sources":["components/ProductList.js","components/MySelect.js","components/FilterFurniture.js","components/FilterDelivery.js","functions/querySearch.js","functions/queryFilterStyle.js","functions/queryFilterDelivery.js","components/content.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["ProductList","props","Object","keys","data","length","map","product","key","className","name","price","toFixed","toString","replace","description","substr","furniture_style","join","delivery_time","Option","type","checked","isSelected","onChange","label","MultiValue","MySelect","this","options","onChangeCallback","otherProps","closeMenuOnSelect","isMulti","components","hideSelectedOptions","backspaceRemovesValue","e","Component","defaultProps","FilterFurniture","style","push","value","placeholder","FilterDelivery","querySearch","searchData","searchQuery","filter","index","arr","ret","toLowerCase","includes","queryFilterStyle","searchFurniture","findIndex","pStyle","fStyle","queryFilterDelivery","searchDelivery","queryDelivery","rangeDay","option","parseInt","delivery","fromDay","toDay","Content","useState","setData","furnitures","setFurnitures","products","setProducts","search","setSearch","filterStyle","setFilterStyle","filterDelivery","setFilterDelivery","useEffect","a","axios","result","furniture_styles","getData","dataSearch","dataFilterFurniture","dataFilterDelivery","event","target","response","Footer","y","Date","getFullYear","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.89db415c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction numberWithCommas(x) {\r\n  const y = x.toFixed(0);\r\n  return y.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n}\r\n\r\n// RENDER PRODUCT LIST \r\nfunction ProductList(props) {\r\n  if (Object.keys(props.data).length > 0) {\r\n    const items = props.data;\r\n    const listItems = items.map((product, key) =>\r\n      <div key={key} className=\"productCont\">\r\n        <div className=\"productBox\">\r\n          <div className=\"product\">\r\n            <div className=\"prodHead\">\r\n              <div className=\"prodName\">\r\n                {product.name}\r\n              </div>\r\n              <div className=\"prodPrice\">\r\n                Rp{numberWithCommas(product.price)}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"prodDesc\">\r\n              {product.description.substr(0, 114)}...\r\n            </div>\r\n\r\n            <div className=\"prodFstyle\">\r\n              {product.furniture_style.join(', ')}\r\n            </div>\r\n\r\n            <div className=\"prodDelivery\">\r\n              Delivery time : {product.delivery_time} hari\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (listItems);\r\n  }\r\n  else // FIRST RENDER THE DATA IS EMPTY SO GIVE THIS RETURN SO NO ERROR\r\n    return true;\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Select, { components } from \"react-select\";\r\n\r\nconst Option = props => (\r\n  <div>\r\n    <components.Option {...props}>\r\n      <input type=\"checkbox\" checked={props.isSelected} onChange={() => null} />{\" \"}\r\n      <label>{props.label}</label>\r\n    </components.Option>\r\n  </div>\r\n);\r\n\r\nconst MultiValue = props => (\r\n  <components.MultiValue {...props}>\r\n    <span>{props.data.label}</span>\r\n  </components.MultiValue>\r\n);\r\n\r\nclass MySelect extends Component {\r\n  static propTypes = {\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        value: PropTypes.node,\r\n        label: PropTypes.node\r\n      })\r\n    ).isRequired,\r\n    onChangeCallback: PropTypes.func.isRequired\r\n  };\r\n\r\n  static defaultProps = {\r\n    options: []\r\n  };\r\n\r\n  render() {\r\n    const { options, onChangeCallback, ...otherProps } = this.props;\r\n\r\n    return (\r\n      <Select\r\n        closeMenuOnSelect={false}\r\n        isMulti\r\n        components={{ Option, MultiValue }}\r\n        options={options}\r\n        hideSelectedOptions={false}\r\n        backspaceRemovesValue={false}\r\n        onChange={e => onChangeCallback(e)}\r\n        {...otherProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MySelect;\r\n","import React from 'react';\r\nimport MySelect from './MySelect.js';\r\n\r\n// RENDER SELECT FURNITURE STYLE\r\nfunction FilterFurniture(props) {\r\n  if (Object.keys(props.options).length > 0) {\r\n    let options = [];\r\n    const items = props.options;\r\n    items.map((style) => {\r\n      return options.push({ label: style, value: style});\r\n    });\r\n\r\n    return <MySelect\r\n      // className=\"fFurniture\"\r\n      placeholder=\"Furniture Style\"\r\n      options={options}\r\n      value={props.value}\r\n      onChangeCallback={props.onChangeCallback}\r\n    />\r\n  }\r\n  else // FIRST RENDER THE DATA IS EMPTY SO GIVE THIS RETURN SO NO ERROR\r\n    return true;\r\n}\r\n\r\nexport default FilterFurniture;\r\n","import React from 'react';\r\nimport MySelect from './MySelect.js';\r\n\r\n// RENDER SELECT DELIVERY\r\nfunction FilterDelivery(props) {\r\n  return <MySelect\r\n    // className=\"fFurniture\"\r\n    placeholder=\"Furniture Delivery\"\r\n    options={props.options}\r\n    value={props.value}\r\n    onChangeCallback={props.onChangeCallback}\r\n  />\r\n}\r\n\r\nexport default FilterDelivery;\r\n","// FUNCTION FILTER SEARCH\r\nfunction querySearch(searchData, searchQuery) {\r\n  const dataSearch = searchData.filter((product, index, arr) => {\r\n    let ret;\r\n    const name = product.name.toLowerCase();\r\n    if (name.includes(searchQuery)) {\r\n      ret = product;\r\n    }\r\n\r\n    return ret;\r\n  });\r\n\r\n  return dataSearch;\r\n}\r\n\r\nexport default querySearch;\r\n","// FUNCTION FILTER FURNITURE STYLE\r\nfunction queryFilterStyle(searchFurniture, queryFilterStyle) {\r\n  const dataFurniture = searchFurniture.filter((product, index, arr) => {\r\n\r\n    // USING FIND INDEX SO IF FIND ONE FROM ARRAY THE RECURSIVE WILL STOP\r\n    const prodStyle = product.furniture_style.findIndex(pStyle => {\r\n\r\n      // USING FIND INDEX SO IF FIND ONE FROM ARRAY THE RECURSIVE WILL STOP\r\n      if (queryFilterStyle) { // BEHAVIOR TIDAK KONSISTEN, MENCEGAH RETURN NULL\r\n        if (queryFilterStyle.length > 0) { // BEHAVIOR TIDAK KONSISTEN, MENCEGAH RETURN EMPTY ARRAY\r\n          const dataFStyle = queryFilterStyle.findIndex(fStyle => {\r\n            if (pStyle === fStyle.value) {\r\n              return true;\r\n            }\r\n\r\n            return false;\r\n          });\r\n\r\n          return dataFStyle !== -1 ? true : false;\r\n        }\r\n        else // UNTUK RESET FILTER => SHOW ALL DATA\r\n          return true;\r\n      }\r\n      else // UNTUK RESET FILTER => SHOW ALL DATA\r\n        return true;\r\n    });\r\n\r\n    const ret = prodStyle !== -1 ? product : '';\r\n    return ret;\r\n  });\r\n\r\n  return dataFurniture;\r\n}\r\n\r\nexport default queryFilterStyle;\r\n","// FUNCTION FILTER DELIVERY DAYS\r\nfunction queryFilterDelivery(searchDelivery, queryDelivery) {\r\n  let rangeDay = {};\r\n\r\n  const dataDelivery = searchDelivery.filter((product, index, arr) => {\r\n    if (queryDelivery) { // BEHAVIOR LIBRARY TIDAK KONSISTEN, MENCEGAH RETURN NULL\r\n      if (queryDelivery.length > 0) { // BEHAVIOR LIBRARY TIDAK KONSISTEN, MENCEGAH RETURN EMPTY ARRAY\r\n\r\n        const prodDelivery = queryDelivery.findIndex(option => {\r\n          switch(parseInt(option.value)) {\r\n            case 1:\r\n              rangeDay = {'fromDay': 1, 'toDay': 7};\r\n              break;\r\n            case 2:\r\n              rangeDay = {'fromDay': 8, 'toDay': 14};\r\n              break;\r\n            case 3:\r\n              rangeDay = {'fromDay': 22, 'toDay': 30};\r\n              break;\r\n            case 4:\r\n              rangeDay = {'fromDay': 31, 'toDay': 365};\r\n              break;\r\n            default:\r\n              rangeDay = {'fromDay': 1, 'toDay': 365};\r\n          }\r\n\r\n          const delivery = parseInt(product.delivery_time);\r\n          if (delivery >= rangeDay.fromDay && delivery <= rangeDay.toDay) {\r\n            return true;\r\n          }\r\n\r\n          return false;\r\n        });\r\n\r\n        return prodDelivery !== -1 ? product : '';\r\n      }\r\n      else // UNTUK RESET FILTER => SHOW ALL DATA\r\n        return product;\r\n    }\r\n    else // UNTUK RESET FILTER => SHOW ALL DATA\r\n      return product;\r\n  });\r\n  \r\n  return dataDelivery;\r\n}\r\n\r\nexport default queryFilterDelivery;\r\n","import React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n// MYCOMPONENTS\r\nimport ProductList from './ProductList.js';\r\nimport FilterFurniture from './FilterFurniture.js';\r\nimport FilterDelivery from './FilterDelivery.js';\r\n// MYFUNCTIONS\r\nimport querySearch from '../functions/querySearch.js';\r\nimport queryFilterStyle from '../functions/queryFilterStyle.js';\r\nimport queryFilterDelivery from '../functions/queryFilterDelivery.js';\r\n\r\nfunction Content() {\r\n  const [data, setData] = useState({});\r\n  const [furnitures, setFurnitures] = useState({});\r\n  const [products, setProducts] = useState({});\r\n  const [search, setSearch] = useState('');\r\n  const [filterStyle, setFilterStyle] = useState([]);\r\n  const [filterDelivery, setFilterDelivery] = useState([]);\r\n  const delivery = [\r\n    { value: \"1\", label: \"1 week\" },\r\n    { value: \"2\", label: \"2 weeks\" },\r\n    { value: \"3\", label: \"1 month\" },\r\n    { value: \"4\", label: \"more\" },\r\n  ];\r\n\r\n  // GET API DATA KETIKA RENDER PERTAMA\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const result = await axios(\"https://www.mocky.io/v2/5c9105cb330000112b649af8\");\r\n      setData(result.data); // FOR MASTER DATA\r\n      setFurnitures(result.data.furniture_styles); // FOR SEARCH & FILTER DATA\r\n      setProducts(result.data.products); // FOR SEARCH & FILTER DATA\r\n    }\r\n\r\n    getData();\r\n  }, [])\r\n\r\n  // HANDLER SEARCH INPUT & FILTER FURNITURE STYLE & FILTER DELIVERY\r\n  useEffect(() => {\r\n    if (Object.keys(data).length > 0) {\r\n\r\n      // FILTER STEP 1 => BY SEARCH\r\n      const dataSearch = querySearch(data.products, search);\r\n      // FILTER STEP 2 => BY FURNITURE STYLE\r\n      const dataFilterFurniture = queryFilterStyle(dataSearch, filterStyle);\r\n      // FILTER STEP 3 => BY DELIVERY TIME\r\n      const dataFilterDelivery = queryFilterDelivery(dataFilterFurniture, filterDelivery);\r\n\r\n      setProducts(dataFilterDelivery);\r\n    }\r\n  }, [search, filterStyle, filterDelivery])\r\n\r\n  \r\n  return (\r\n    <>\r\n      <header>\r\n        <form>\r\n          <div className=\"row\">\r\n            <div className=\"col50\">\r\n              <div className=\"filter\">\r\n                <input className=\"search\" type=\"text\" placeholder=\"Search Furniture\" value={search} onChange={event => setSearch(event.target.value.toLowerCase())} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col50\">\r\n              <div className=\"filter\">\r\n                <FilterFurniture options={furnitures} value={filterStyle} onChangeCallback={response => setFilterStyle(response)} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col50\">\r\n              <div className=\"filter\">\r\n                <FilterDelivery options={delivery} value={filterDelivery} onChangeCallback={response => setFilterDelivery(response)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </header>\r\n\r\n      <div className=\"content\">\r\n        <ProductList data={products} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  const y = new Date().getFullYear();\r\n  \r\n  return (\r\n    <footer>\r\n      <p>Copyrights &copy; {y} Ahmad Amri</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.css';\nimport Content from './components/content.js';\nimport Footer from './components/footer.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Content />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}